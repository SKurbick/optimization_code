prices_by_categories = [[100, 200, 400, 600], [200, 500], [100, 200, 100, 100], [800, 900]]
# нужно посчитать среднее ариф-е значение каждого отдельного списка внутри списка
# оператор lambda создает одноразовую функцию
# благодаря мап мы проходимся по каждому списку/элементу в prices_by_categories
print(list(map(lambda elem: sum(elem) / len(elem), prices_by_categories)))
# [325.0, 350.0, 125.0, 850.0]

# нужно перевести все строки в числовое значение, то есть из str делать int
old_list = ['1', '2', '3', '4', '5', '6', '7']
new_list = list(map(int, old_list))  # всего два аргумента, 1-это функция, 2-элемент с которым работает программа)


# [1, 2, 3, 4, 5, 6, 7]

# в первом аргументе может быть любая именная функция, либо созданная пользователем
# условно
def func(elems):
    return elems + 1


nums = list(map(func, new_list))  # как с int в первом случае мы не указываем аргументы в функцию, для map все очевидно
# еще для чтения мы используем метод list
# во втором случае мы использовали переменную с первой функции с переделанным списком на int значения и прибавили к каждому
# значению +1
print(nums)  # [2, 3, 4, 5, 6, 7, 8]
#######################################################################################################################

